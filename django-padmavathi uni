Good Afternoon to all:
----------------------
- Day Objectives:
----------------
						
- s/w installations for django
		- python s/w
                - django package
									
			cmd-->pip install django
								
                - sublime text(editor)
														
								
- django introduction:
------------------------
	- it is a one of the python web frame work it is used to develop dynamic web applications
							
								python web frame works:
									- django
									- flask
									- web2py
									- bottle
									- cherrypy
									
							- web frame work?
							 ------------------
								- it is used to design support the development of web applications like
										- web services
										- web resources
										- web API
										
							- Why we are using django frame work?
							--------------------------------------
									- a web application developer much easier to building a flexible and 
									scalable and maintainable web application.
									
							- what is django?
							------------------
								- it is used to developing a dynamic webpages
								- django is a high level and it contains "MVT" architechture.
								- every framework should follow the two architechtures:
											- MVC
											- MVT
							- django features:
							------------------
								- very fast(it works very fast)
								- fully loaded(it contains modules and libraries which can be used to handle web applications)
								- secure(django provides user authentication system it provides a secure way to manage user account and passwords.)
								- scalability(it is quickly and flexibly switch from small to large applications)
								- open source(to build allication for different different domains)
								
							- MVC:(Model view controller)
								- model:it is used to store data base files
								- view:here we can write logic for user representation(html files)
								- controller:we can build main logic for controlling both model and view.
								 
								                    controller
													
													
													
											view               model
						
							- MVT:Model view templates:
							-----------------------------
								model:it is used to store db files
								view:it is working like a controller(we can build logic for controlling both model and template)
								templates:it is used to store .html files
								
								          1           2       5      3
									user---->urls.py----->views.py--->templates(.html)
									                         6      4
													zzz---->models.py(db)
																  
																			

			  
							
















                                                        Day objectives:
							-----------------
								- project creation
									- we have to choose one proper location i.e desktop,doc,c,d,...
									- in that you to create one folder with name collegename_django
													ex:viit_django
									- in that above folder location you have open cmd
									- for project creation django provides one command
									
												i.e django-admin startproject projectname
												ex: django-admin startproject MyProject
									
													- __init__:this an empty python file 
													- asgi:asynchronus server gateway interface
													- wsgi:web service gateway interface
													- settings.py:in this file we will make all project settings.
													- urls.py:here we have create usedefined urls
												- manage.py:django server execution is start from this file
									
									
								- App creation:
								----------------
									- wherever manage.py file is located in that location only we will django application
									- for app creation django provides one command
										i.e python manage.py startapp appname
										ex: python manage.py startapp MyApp
										
											migrations:it will handle all db connections
											
											init:it is an empty file
											admin:by using this file we will give permission to admin to access our data base
											apps.py:we will see our app information
											models:we will write data base code
											test.py:using this file for testing purpose
											views.py:controller file(it controls both model and template)
											
								- run server:
								------------
									- for server running django provides one command 
											i.e python manage.py runserver
											
											
											
								
									Day Objectives:
									---------------
										- URL creation
												- for url creation django provides path function.
												- path function contains 3 parameters
													path('urlname/',views.function name,name of the url)
													
													user--->urls-->views
													
													localhost:8000/urlname/
													ex: localhost:8000/hello
													
													html heading tags--h1 to h6
													
													
											- static Urls
													path('urlname/',views.fn name,name of the url)
											- Dynamic Urls
													path(urlname/<datatype:variable name>/',views.fn name,name of the url)
													
													 localhost:8000/sample/123
									
											Day Objectives:
											---------------
												- Dynamic URL Mapping
														path(urlname/<datatype:variable name>/,fn,name of the url)
														localhost:8000/urlname---static
														localhost:8000/urlname/datatype---(str,,int,,float)
														localhost:8000/urlname/srikanya/56890
														
														
												- Django Templates:
												----------------------
													template:it contains .html files (front-end )
													- for template creation django provides one function
														i.e render
														
														user->urls->views->.html
													- render function contains 3 parameters
														render(p1,p2,p3)
														render(request,'html file location',dictionary)
														
												- templates creation:
												-----------------------
													- django application folder-->new folder->templates
													- templates-->new folder->Application name folder(MyApp)
													
												- html file:(<html)---short cut for html file 
												------------
													- doctype
													- html open tag
													- head tag
														tittle tag
													-head(close)
													- body tag
													- body tag
								 
													-html
													
									
											Day Objectives:
											===============
												- Django Templates
													- if you want to send any data from controller(views) to .html(templates)
															- dictionary(it is a key,value pair)
															- represented by {}
																d={k:v,k1:v1,k2:v2.....}
																
												- DTL(Django template language)
														- for loop
															{% for i in variablename %}    {% while condition %}
																								{{}}
																								inc
																							{% endwhile%}
																{{}} --->printing purpose
															
															{% endfor %}
															
															
												- CSS(cascading style sheets)
													- it is used apply styles on html tags
													- syntax:
															property:value;
															ex: color:yellow
												- types of CSS:
														- inline css
															- if you apply styles on html tags in single line or same line
														
														
														
														
														- internal css
														
															- if you apply css properties in head tag
														- external css
													
									
										- Day objectives:
										-----------------
											- external css:we have to create one separate .css file in that file
											we will apply css properties
										
										- static file handling:
										-----------------------
											- static files: we can store .css,.js,images
											
										- how create static files:
										---------------------------
											- myApp ->newfolder->static
											- static-> 3 new folders->css,js,images
											
									
												
											- DAY Objectives:
												- Bootstrap(by using bootstrap classes to apply styles on html elements)
												- contents,layout,padding ,margin,color codes 
													- online bootstrap 
														- we have to copied both css,js links from online.
														- we have to place both in after title tag
														
															- syntax:
																margin top 6px
																mt-6
																margin bottom mb-5
																background bg,row,col
																colorcodes:primary,secondary,success,warning....
																
													
												- offline bootstrap(we have store both css and js links in offline)
														- static files 
														
														
												
													
										